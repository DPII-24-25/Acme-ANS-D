# messages-en.i18n
#
# Copyright (C) 2012-2025 Rafael Corchuelo.
#
# In keeping with the traditional purpose of furthering education and research, it is
# the policy of the copyright owner to permit non-commercial use and redistribution of
# this software. It has been tested carefully, but it is not guaranteed for any particular
# purposes.  The copyright owner does not offer any warranties or representations, nor do
# they accept any liabilities with respect to them.

acme.validation.flight.identifierNumber.message = The identifier do not correspond with the initials
acme.validation.leg.flightNumber.message = The identifier do not correspond with the IATA code
acme.validation.flight.legs.departure = There is a departure incompatibility in the flight legs.
acme.validation.flight.legs.arrival = There is an arrival incompatibility in the flight legs.
acme.validation.leg.arrivalDeparture.message = The scheduleDeparture should be before the scheduleArrival.
acme.validation.flight.legs.departure = There is a departure incompatibility in the flight legs
acme.validation.flight.legs.arrival = There is an arrival incompatibility in the flight leg
acme.validation.leg.arrivalDeparture.message = The scheduleDeparture should be before the scheduleArrival
acme.validation.leg.airports.message = The airport of arrival and departure should be different
acme.validation.leg.aircraft.message = The aircraft assigned to this leg is rigth now in maintenance
acme.validation.flight.legs.empty = It is not possible to have a flight without no legs assigned
acme.validation.airline.nameLength.message = Name must not exceed 50 characters
acme.validation.airline.momentIsInPast.message = Foundation moment can't be placed in the future
acme.validation.airline.uniqueIataCode.message = IATA code must be unique
acme.validation.flight.currency = The currency is not supported

acme.validation.leg.flightNumber.unique.message = The code inserted is just in use
acme.validation.leg.overlapping.message = It is not possible to create a new Leg with these departure and arrival dates
acme.validation.claim.leg = The leg associated should be published

acme.validation.assignment.leg = The leg associated should be published
acme.validation.leg.date.foundation.message = The Airline foundation should be before. 

# FlightAssignment
acme.validation.flightAssignment.memberNotAvailable = This member is not available; the assignment cannot be created.
acme.validation.flightAssignment.legInPast = The selected leg has already occurred.
acme.validation.flightAssignment.legNotPublished = The selected leg is not published.
acme.validation.flightAssignment.legNotInAirline = The selected leg is not assigned to your airline.
acme.validation.flightAssignment.overlappingLegs = You already have an assignment overlapping this leg.
acme.validation.flightAssignment.memberDuplicatedOnLeg = This member is already assigned to this leg.
acme.validation.flightAssignment.onlyOnePilot = This leg already has a pilot assigned.
acme.validation.flightAssignment.onlyOneCoPilot = This leg already has a co-pilot assigned.
acme.validation.flightAssignment.mustBeConfirmed = The assignment must be confirmed to publish it.
acme.validation.flightAssignment.lastUpdate.past = The last update must be in the past or now.
acme.validation.flightAssignment.mustBeDraftToDelete = Only draft assignments can be deleted.

# ActivityLog
acme.validation.activitylog.assignmentNotConfirmed = The associated assignment must be confirmed.
acme.validation.activitylog.legNotCompleted = The associated leg must have already occurred.
acme.validation.activitylog.registrationmoment.tooEarly = The registration moment must be after the leg's arrival.
acme.validation.activitylog.registrationmoment.required = The registration moment is required.